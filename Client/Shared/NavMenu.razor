@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@*Login*@
@attribute [Authorize]
@inject CustomAuthenticationStateProvider Auth
@inject HttpClient Http
@*Login*@

@*https://material.io/resources/icons/?style=baseline*@
<div style="width:310px;transform:translateX(0px);" class="rz-sidebar">
    <RadzenPanelMenu Style="width:300px">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All"><RadzenPanelMenuItem Text="RIEGO ZAPO" Icon="home" /></NavLink>
        <RadzenPanelMenuItem Text="Catalogos/Riego" Icon="local_gas_station">
            @*@if (IsAdmin)
        {
            <RadzenPanelMenuItem Text="Combustible Tipo" Path="CombustibleTipo" Icon="local_gas_station"></RadzenPanelMenuItem>
        }*@
            <RadzenPanelMenuItem Text="Tablilla" Path="Tablilla" Icon="local_gas_station"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Llaves" Path="Llave" Icon="local_gas_station"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Secciones" Path="Seccion" Icon="local_gas_station"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Horarios" Path="Horario" Icon="local_gas_station"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Asignar Horario" Path="RelacionLlaveHorario" Icon="local_gas_station"></RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Riegos" Path="Riego" Icon="local_gas_station"></RadzenPanelMenuItem>
        </RadzenPanelMenuItem>

        @if (IsAdmin)
        {
            <RadzenPanelMenuItem Text="Usuarios" Icon="directions_run">
                <RadzenPanelMenuItem Text="Usuarios" Path="Usuario" Icon="directions_run"></RadzenPanelMenuItem>
                <RadzenPanelMenuItem Text="Permisos" Path="Permisos" Icon="directions_run"></RadzenPanelMenuItem>
                <RadzenPanelMenuItem Text="Roles" Path="Rol" Icon="directions_run"></RadzenPanelMenuItem>
            </RadzenPanelMenuItem>
        }
        @if (IsAdmin || VerReportes)
        {
            <RadzenPanelMenuItem Text="Reportes" Icon="article">
                @*<RadzenPanelMenuItem Text="Reportes" Path="https://10.10.10.108:8080/" Icon="article"></RadzenPanelMenuItem>*@
                <RadzenPanelMenuItem Text="Reportes" Path="http://10.10.10.108:8080/" Icon="article"></RadzenPanelMenuItem>
            </RadzenPanelMenuItem>
        }
    </RadzenPanelMenu>
</div>

@code
{
    private bool collapseNavMenu = true;
    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    BlazorCoockies blazorCoockies = new BlazorCoockies();
    bool _esAdmin;
    bool _ver;
    bool _crear;
    bool _editar;
    bool _borrar;
    int _idEmpresa;
    int _idSucursal;
    bool _verReportes;
    [Parameter] public bool IsAdmin { get; set; }
    [Parameter] public bool VerReportes { get; set; }

    protected override void OnParametersSet()
    {
        //the param will be set now
        var isAdmin = IsAdmin;
        var verReportes = VerReportes;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Reload()
    {
        BlazorCoockies.isLoggedIn = true;
        StateHasChanged();
    }

    void Change(object value, string name, string action)
    {
        events.Add(DateTime.Now, $"{name} item with index {value} {action}");
        StateHasChanged();
    }
}